(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{188:function(t,e,a){"use strict";a.r(e);var n=a(0),i=Object(n.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p",[t._v("animate() 函数：这个函数的作用是帮助我们形成动画，我们在这个函数中首先需要清除当前屏幕，这里的清除函数用到的是 content.clearRect() 方法。")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),a("p",[t._v("我们需要清除的区域是整个屏幕，所以 content.clearRect() 的参数就是 content.clearRect(0, 0, WIDTH, HEIGHT)，这里我们就用到了之前获取的屏幕宽度和高度的常量：WIDTH 和 HEIGHT。这样我们就将屏幕上的所有内容都清除了。")]),t._v(" "),a("p",[t._v("清除了屏幕内容之后我们就要重新绘制图形：将粒子位移的变化函数 move() 写在 Round_item 的原型上。")]),t._v(" "),a("p",[t._v("重新绘制完图形之后，那么还需要有一个步骤 —— “ 不断”，要想实现动画的效果，就需要 “不断” 地进行清除再重绘，并且中间间隔的时间还不能过长。")]),t._v(" "),t._m(3),t._v(" "),a("p",[t._v("它们的内在运行机制决定了时间间隔参数实际上只是指定了把动画代码添加到浏览器 UI 线程队列中以等待执行的时间。如果队列前面已经加入了其他任务，那动画代码就要等前面的任务完成后再执行。")]),t._v(" "),a("p",[t._v("window.requestAnimationFrame() 方法告诉浏览器您希望执行动画并请求浏览器调用指定的函数在下一次重绘之前更新动画。该方法使用一个回调函数作为参数，这个回调函数会在浏览器重绘之前调用。")]),t._v(" "),t._m(4),t._v(" "),a("p",[t._v("编写动画循环的关键是要知道延迟时间多长合适。一方面，循环间隔必须足够短，这样才能让不同的动画效果显得平滑流畅；另一方面，循环间隔还要足够长，这样才能确保浏览器有能力渲染产生的变化")]),t._v(" "),a("p",[t._v("大多数电脑显示器的刷新频率是60Hz，大概相当于每秒钟重绘 60 次。大多数浏览器都会对重绘操作加以限制，不超过显示器的重绘频率，因为即使超过那个频率用户体验也不会有提升。因此，最平滑动画的最佳循环间隔是 1000ms/60，约等于 16.6ms")]),t._v(" "),a("p",[t._v("requestAnimationFrame 采用系统时间间隔，保持最佳绘制效率，不会因为间隔时间过短，造成过度绘制，增加开销；也不会因为间隔时间太长，使用动画卡顿不流畅，让各种网页动画效果能够有一个统一的刷新机制，从而节省系统资源，提高系统性能，改善视觉效果")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._m(7),t._v(" "),a("p",[t._v("使用 move() 函数来改变 round 的 y 坐标")]),t._v(" "),a("p",[t._v("要将 move() 方法写在 Round_item 的原型上，这样我们创建的每一个 round 都具有了 move() 方法。")]),t._v(" "),a("p",[t._v("在 move() 方法中，我们只需要改变 round 的 y 坐标即可，并且设置边境条件，当 y 坐标的值小于 -10（也可以是其他负值），代表该 round 已经超出了屏幕，这个时候我们要将其移动到屏幕的最底端，这样才能保证我们创建的粒子数不变，一直是 initRoundPopulation 的值。")]),t._v(" "),t._m(8),t._m(9),t._v(" "),t._m(10),t._v(" "),a("p",[a("a",{attrs:{href:"https://codepen.io/fishcyz/full/rPZwra",target:"_blank",rel:"noopener noreferrer"}},[t._v("随机粒子运动效果"),a("OutboundLink")],1)])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"animate-函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#animate-函数","aria-hidden":"true"}},[this._v("#")]),this._v(" animate() 函数")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("context.clearRect(x,y,width,height);")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("x:要清除的矩形左上角的 x 坐标")]),this._v(" "),e("li",[this._v("y:要清除的矩形左上角的 y 坐标")]),this._v(" "),e("li",[this._v("width:要清除的矩形的宽度，以像素计")]),this._v(" "),e("li",[this._v("height:要清除的矩形的高度，以像素计")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"settimeout-和-setinterval-的问题："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#settimeout-和-setinterval-的问题：","aria-hidden":"true"}},[this._v("#")]),this._v(" setTimeout 和 setInterval 的问题：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"requestanimationframe-函数可以说是专门用来写动画的。那么-requestanimationframe-有什么优点呢？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#requestanimationframe-函数可以说是专门用来写动画的。那么-requestanimationframe-有什么优点呢？","aria-hidden":"true"}},[this._v("#")]),this._v(" requestAnimationFrame() 函数可以说是专门用来写动画的。那么 requestAnimationFrame() 有什么优点呢？")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"使用-requestanimationframe-函数递归的调用-animate-函数来实现动画的效果："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-requestanimationframe-函数递归的调用-animate-函数来实现动画的效果：","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用 requestAnimationFrame() 函数递归的调用 animate() 函数来实现动画的效果：")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("function animate() { \ncontent.clearRect(0, 0, WIDTH, HEIGHT); \nfor (var i in round) { \nround[i].move(); \n} \nrequestAnimationFrame(animate) \n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"创建-move-函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建-move-函数","aria-hidden":"true"}},[this._v("#")]),this._v(" 创建 move() 函数")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Round_item.prototype.move = function () { \nthis.y -= 0.15; \nif (this.y <= -10) { \nthis.y = HEIGHT + 10; \n} \nthis.draw(); \n}\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"在-init-中加入-animate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在-init-中加入-animate","aria-hidden":"true"}},[this._v("#")]),this._v(" 在 init() 中加入 animate()")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"效果"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#效果","aria-hidden":"true"}},[this._v("#")]),this._v(" 效果")])}],!1,null,null,null);i.options.__file="RandomParticlesMove.md";e.default=i.exports}}]);