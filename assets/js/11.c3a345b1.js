(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{203:function(t,e,n){"use strict";n.r(e);var a=n(0),s=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"原始（primitive）类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原始（primitive）类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 原始（Primitive）类型")]),t._v(" "),n("blockquote",[n("p",[t._v("涉及面试题：原始类型有哪几种？null 是对象嘛？")])]),t._v(" "),n("h3",{attrs:{id:"共六种"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#共六种","aria-hidden":"true"}},[t._v("#")]),t._v(" 共六种")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("boolean")])]),t._v(" "),n("li",[n("code",[t._v("null")])]),t._v(" "),n("li",[n("code",[t._v("undefined")])]),t._v(" "),n("li",[n("code",[t._v("number")])]),t._v(" "),n("li",[n("code",[t._v("string")])]),t._v(" "),n("li",[n("code",[t._v("symbol")])])]),t._v(" "),n("blockquote",[n("p",[t._v("Tips")])]),t._v(" "),n("ol",[n("li",[t._v("原始类型存储的都是值，是没有函数可以调用的")]),t._v(" "),n("li",[t._v("JS 的 number 类型是浮点类型的")]),t._v(" "),n("li",[t._v("string 类型是不可变的，无论你在 string 类型上调用何种方法，都不会对值有改变")]),t._v(" "),n("li",[t._v("虽然 typeof null 会输出 object，但是这只是 JS 存在的一个悠久 Bug")])]),t._v(" "),n("h1",{attrs:{id:"对象（object）类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#对象（object）类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 对象（Object）类型")]),t._v(" "),n("blockquote",[n("p",[t._v("涉及面试题：对象类型和原始类型的不同之处？函数参数是对象会发生什么问题？")])]),t._v(" "),n("ul",[n("li",[t._v("在 JS 中，除了原始类型那么其他的都是对象类型了。")]),t._v(" "),n("li",[t._v("对象类型和原始类型不同的是，原始类型存储的是值，对象类型存储的是地址（指针）。")])]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("function test(person) {\n  person.age = 26\n  person = {\n    name: 'yyy',\n    age: 30\n  }\n\n  return person\n}\nconst p1 = {\n  name: 'yck',\n  age: 25\n}\nconst p2 = test(p1)\nconsole.log(p1) // -> age: 26, name: \"yck\"\nconsole.log(p2) // -> age: 30, name: \"yyy\"\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br")])]),n("ul",[n("li",[t._v("函数传参是传递对象指针的副本")])]),t._v(" "),n("h1",{attrs:{id:"typeof-vs-instanceof"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#typeof-vs-instanceof","aria-hidden":"true"}},[t._v("#")]),t._v(" typeof vs instanceof")]),t._v(" "),n("blockquote",[n("p",[t._v("涉及面试题：typeof 是否能正确判断类型？instanceof 能正确判断对象的原理是什么？")])]),t._v(" "),n("ul",[n("li",[t._v("typeof 对于原始类型来说，除了 null 都可以显示正确的类型")]),t._v(" "),n("li",[t._v("typeof 对于对象来说，除了函数都会显示 object")])]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("typeof 1 // 'number'\ntypeof '1' // 'string'\ntypeof undefined // 'undefined'\ntypeof true // 'boolean'\ntypeof Symbol() // 'symbol'\ntypeof [] // 'object'\ntypeof {} // 'object'\ntypeof console.log // 'function'\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br")])]),n("ul",[n("li",[t._v("对于原始类型来说，你想直接通过 instanceof 来判断类型是不行的")])]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("const Person = function() {}\nconst p1 = new Person()\np1 instanceof Person // true\n\nvar str = 'hello world'\nstr instanceof String // false\n\nvar str1 = new String('hello world')\nstr1 instanceof String // true\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br")])]),n("h3",{attrs:{id:"instanceof-判断原始类型的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#instanceof-判断原始类型的","aria-hidden":"true"}},[t._v("#")]),t._v(" instanceof 判断原始类型的")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("class PrimitiveString {\n  static [Symbol.hasInstance](x) {\n    return typeof x === 'string'\n  }\n}\nconsole.log('hello world' instanceof PrimitiveString) // true\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])]),n("p",[t._v("Symbol.hasInstance：自定义 instanceof 行为")]),t._v(" "),n("h1",{attrs:{id:"类型转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类型转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 类型转换")]),t._v(" "),n("p",[t._v("在 JS 中类型转换只有三种情况，分别是：")]),t._v(" "),n("ul",[n("li",[t._v("转换为布尔值")]),t._v(" "),n("li",[t._v("转换为数字")]),t._v(" "),n("li",[t._v("转换为字符串")])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[t._v("原始值")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("转换目标")]),t._v(" "),n("th",[t._v("结果")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("number")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("布尔值")]),t._v(" "),n("td",[t._v("除了0、-0、NaN都为true")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("布尔值")]),t._v(" "),n("td",[t._v("除了空串都为true")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("underfined、null")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("布尔值")]),t._v(" "),n("td",[t._v("false")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("引用类型")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("布尔值")]),t._v(" "),n("td",[t._v("true")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("number")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("字符串")]),t._v(" "),n("td",[t._v("5=>'5'")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Boolean、函数、Symbol")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("字符串")]),t._v(" "),n("td",[t._v("‘true’")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("数组")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("字符串")]),t._v(" "),n("td",[t._v("[1,2]=>'1,2'")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("对象")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("字符串")]),t._v(" "),n("td",[t._v("'[object Object]'")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("数字")]),t._v(" "),n("td",[t._v("'1'=>1,'a'=>NaN")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("数组")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("数字")]),t._v(" "),n("td",[t._v("空数组为0，存在一个元素且为数字转数字，其他情况为NaN")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("null")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("数字")]),t._v(" "),n("td",[t._v("0")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("除了数组的引用类型")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("数字")]),t._v(" "),n("td",[t._v("NaN")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("Symbol")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("数字")]),t._v(" "),n("td",[t._v("抛错")])])])]),t._v(" "),n("h3",{attrs:{id:"转boolean"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#转boolean","aria-hidden":"true"}},[t._v("#")]),t._v(" 转Boolean")]),t._v(" "),n("p",[t._v("在条件判断时，除了 undefined， null， false， NaN， ''， 0， -0，其他所有值都转为 true，包括所有对象。")]),t._v(" "),n("h3",{attrs:{id:"对象转原始类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#对象转原始类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 对象转原始类型")]),t._v(" "),n("p",[t._v("对象在转换类型的时候，会调用内置的 [[ToPrimitive]] 函数")]),t._v(" "),n("ul",[n("li",[t._v("如果已经是原始类型了，那就不需要转换了")]),t._v(" "),n("li",[t._v("调用 x.valueOf()，如果转换为基础类型，就返回转换的值")]),t._v(" "),n("li",[t._v("调用 x.toString()，如果转换为基础类型，就返回转换的值")]),t._v(" "),n("li",[t._v("如果都没有返回原始类型，就会报错")])]),t._v(" "),n("h3",{attrs:{id:"四则运算符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四则运算符","aria-hidden":"true"}},[t._v("#")]),t._v(" 四则运算符")]),t._v(" "),n("p",[t._v("加法运算符不同于其他几个运算符，它有以下几个特点：")]),t._v(" "),n("ul",[n("li",[t._v("运算中其中一方为字符串，那么就会把另一方也转换为字符串")]),t._v(" "),n("li",[t._v("如果一方不是字符串或者数字，那么会将它转换为数字或者字符串")])])])}],!1,null,null,null);s.options.__file="README.md";e.default=s.exports}}]);